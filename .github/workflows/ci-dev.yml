name: dev CI

env:
  BUILD_ID : ${{ github.sha }}
  HELM_VALUES: porko-service-chart/values-dev.yaml
  HELM_BRANCH: dev

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üçÄ checkout submodule
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: true

      - name: üçÄ set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: üçÄ gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: üçÄ grant execute permission for gradlew
        run: chmod +x gradlew

      - name: üçÄ copy submodule properties
        run: ./gradlew copyProperties

      - name: üçÄ Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_ECR_UPLOAD_ACCESS }}
          aws-secret-access-key: ${{ secrets.DEV_ECR_UPLOAD_SECRET }}
          aws-region: ap-northeast-2

      - name: üçÄ Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: üçÄ Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.DEV_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ env.BUILD_ID }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: üçÄcheckout helm repo
        uses: actions/checkout@v3
        with:
          repository: project-porko/porko-k8s-resources
          path: helm-chart
          ref: main

      - name: üçÄrenew image tag to helm values
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '(.image.tag) = "${{ env.BUILD_ID }}"' helm-chart/${{ env.HELM_VALUES }}

      - name: üçÄ apply latest application image to helm repo
        run: |
          cd helm-chart
          git config --local user.email "devops@porko.store"
          git config --local user.name "devCi"
          git add .
          git commit -m "ci: apply latest HELM changes: ${{ secrets.DEV_ECR_REPO_NAME }}:${{ env.BUILD_ID }}"
          current_branch=$(git branch --show-current)
          git checkout -b ${{ env.HELM_BRANCH }} && git merge ${current_branch}
          git push --force origin ${{ env.HELM_BRANCH }}
